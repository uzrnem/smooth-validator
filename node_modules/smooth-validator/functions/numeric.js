const dataType = require('../dataType');

module.exports = {
  validateNumeric: function (varName, varValue) {
    if (!dataType.isNumber(varValue))
      return { resKey: varName, resMsg: ' is not number' };
    return { resKey: false, resMsg: null };
  },
  validateBetween: function (varName, varValue, values, dataObj) {
    var min = values[0]
    if (values[0] in dataObj) { min = dataObj[values[0]]}
    var max = values[1]
    if (values[1] in dataObj) { max = dataObj[values[1]]}
    if (varValue < min || varValue > max)
      return { resKey: varName, resMsg: " should be greater than " + values[0] + " and less than " + values[1] };
    return { resKey: false, resMsg: null };
  },
  validateGt: function (varName, varValue, values, dataObj) {
    var c = values[0]
    if (values[0] in dataObj) { c = dataObj[values[0]]}
    if (varValue <= c)
      return { resKey: varName, resMsg: " should be greater than " + values[0] };
    return { resKey: false, resMsg: null };
  },
  validateGte: function (varName, varValue, values, dataObj) {
    var c = values[0]
    if (values[0] in dataObj) { c = dataObj[values[0]]}
    if (varValue < c)
      return { resKey: varName, resMsg: " should be greater than or equals to " + values[0] };
    return { resKey: false, resMsg: null };
  },
  validateLt: function (varName, varValue, values, dataObj) {
    var c = values[0]
    if (values[0] in dataObj) { c = dataObj[values[0]]}
    if (varValue >= c)
      return { resKey: varName, resMsg: " should be less than " + values[0] };
    return { resKey: false, resMsg: null };
  },
  validateLte: function (varName, varValue, values, dataObj) {
    var c = values[0]
    if (values[0] in dataObj) { c = dataObj[values[0]]}
    if (varValue > c)
      return { resKey: varName, resMsg: " should be less than or equals to " + values[0] };
    return { resKey: false, resMsg: null };
  },
  validateOdd: function (varName, varValue) {
    if ((varValue % 2) == 1)
      return { resKey: false, resMsg: null };
    return { resKey: varName, resMsg: ' is not odd number' };
  },
  validateEven: function (varName, varValue) {
    if ((varValue % 2) == 0)
      return { resKey: false, resMsg: null };
    return { resKey: varName, resMsg: ' is not even number' };
  }
}