const dataType = require('../dataType');

module.exports = {
  validateNumeric: function (varName, varValue) {
    return dataType.isNumber(varValue) ? null : { variable: varName, value: varValue, firstValue: varValue };
  },
  validateBetween: function (varName, varValue, values, dataObj) {
    var min = values[0]
    if (values[0] in dataObj) { min = dataObj[values[0]]}
    var max = values[1]
    if (values[1] in dataObj) { max = dataObj[values[1]]}
    return (varValue < min || varValue > max) ? { variable: varName, value: varValue, firstValue: values[0], secondValue: values[1] } : null;
  },
  validateGt: function (varName, varValue, values, dataObj) {
    var c = values[0]
    if (values[0] in dataObj) { c = dataObj[values[0]]}
    return (varValue <= c) ? { variable: varName, value: varValue, firstValue: values[0] } : null;
  },
  validateGte: function (varName, varValue, values, dataObj) {
    var c = values[0]
    if (values[0] in dataObj) { c = dataObj[values[0]]}
    return (varValue < c) ? { variable: varName, value: varValue, firstValue: values[0] } : null;
  },
  validateLt: function (varName, varValue, values, dataObj) {
    var c = values[0]
    if (values[0] in dataObj) { c = dataObj[values[0]]}
    return (varValue >= c) ? { variable: varName, value: varValue, firstValue: values[0] } : null;
  },
  validateLte: function (varName, varValue, values, dataObj) {
    var c = values[0]
    if (values[0] in dataObj) { c = dataObj[values[0]]}
    return (varValue > c) ? { variable: varName, value: varValue, firstValue: values[0] } : null;
  },
  validateOdd: function (varName, varValue) {
    return ((varValue % 2) == 1) ? null : { variable: varName, value: varValue, firstValue: varValue };
  },
  validateEven: function (varName, varValue) {
    return ((varValue % 2) == 0) ? null : { variable: varName, value: varValue, firstValue: varValue };
  }
}